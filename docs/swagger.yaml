definitions:
  handlers.HealthProbe:
    properties:
      status:
        type: string
    type: object
  models.Weather:
    properties:
      Description:
        type: string
      humidity:
        type: integer
      temperature:
        type: number
    type: object
info:
  contact: {}
  description: Weather API application that allows users to subscribe to weather updates
    for their city.
  title: Weather Forecast API
  version: "1.0"
paths:
  /api/confirm/{token}:
    get:
      consumes:
      - application/json
      description: Confirms a subscription using the token sent in the confirmation
        email.
      parameters:
      - description: Confirmation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Subscription confirmed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
      summary: Confirm email subscription
      tags:
      - subscription
  /api/subscribe:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Subscribe an email to receive weather updates for a specific city
        with chosen frequency.
      parameters:
      - description: Email address to subscribe
        in: formData
        name: email
        required: true
        type: string
      - description: City for weather updates
        in: formData
        name: city
        required: true
        type: string
      - description: Frequency of updates (hourly or daily)
        enum:
        - hourly
        - daily
        in: formData
        name: frequency
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Subscription successful. Confirmation email sent.
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "409":
          description: Email already subscribed
          schema:
            type: string
      summary: Subscribe to weather updates
      tags:
      - subscription
  /api/unsubscribe/{token}:
    get:
      consumes:
      - application/json
      description: Unsubscribes an email from weather updates using the token sent
        in emails.
      parameters:
      - description: Unsubscribe token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Unsubscribed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
      summary: Unsubscribe from weather updates
      tags:
      - subscription
  /api/weather:
    get:
      consumes:
      - application/json
      description: Returns the current weather forecast for the specified city using
        WeatherAPI.com.
      parameters:
      - description: City name for weather forecast
        in: query
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Weather'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: City not found
          schema:
            type: string
      summary: Get current weather for a city
      tags:
      - weather
  /health/liveness:
    get:
      consumes:
      - application/json
      description: Check if server is up and running
      operationId: livenessProbe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthProbe'
      summary: Liveness Probe
      tags:
      - health
  /health/readiness:
    get:
      consumes:
      - application/json
      description: Check if server is ready to accept requests
      operationId: readinessProbe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthProbe'
      summary: Readiness Probe
      tags:
      - health
swagger: "2.0"
